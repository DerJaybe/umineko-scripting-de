name: CI

on: 
  workflow_dispatch:
    inputs:
      desc:
        type: string
        description: "Description for new release"
        required: true
        default: 'Beschreibung nicht definiert.'

jobs:
  build:
    name: Build scripts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Compile
        run: |
          BUILD=$(($(git rev-list --count --first-parent HEAD)+3500))
          TODAY=$(date +"%d.%m.%y")
          echo "BUILD=${BUILD}" >> "$GITHUB_ENV"
          echo "TODAY=${TODAY}" >> "$GITHUB_ENV"
          echo "Build number ${BUILD}"
          mkdir -p ciout
          LAST=$(<current/last)
          if [ "$LAST" == "" ]; then LAST=1; fi
          if [ -f current/last_en ]; then LAST_EN=$(<current/last_en); else LAST_EN="$LAST" ; fi
          php update-manager/update-manager.php dscript "ciout/en.txt" . en ${BUILD} || exit 1
          php update-manager/update-manager.php dscript "ciout/de.txt" . de ${BUILD} || exit 1
          php update-manager/update-manager.php script ciout/en.txt "ciout/en.file" "$LAST_EN" || exit 1
          php update-manager/update-manager.php script ciout/de.txt "ciout/de.file" "$LAST_EN" || exit 1
          cp misc/chiru.file ciout
          cp misc/game.hash ciout
          cd ciout
          zip -qry umineko-de-and-main-scripts_r${BUILD}.zip en.file de.file chiru.file game.hash default.cfg || exit 1
          cd ..
          echo ${{ inputs.desc }} >> release_notes.md

      - name: Release
        if: github.repository_owner == ${{ github.repository_owner }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: z${{ env.BUILD }}
          release_name: Umineko Great Demons Scripts r${{ env.BUILD }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: Upload Main
        if: github.repository_owner == ${{ github.repository_owner }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ciout/umineko-de-and-main-scripts_r${{ env.BUILD }}.zip
          asset_name: umineko-de-and-main-scripts_r${{ env.BUILD }}.zip
          asset_content_type: application/zip
